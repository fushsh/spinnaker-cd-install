# This is a basic workflow to help you get started with Actions

name: Spinnaker Pre Install
env:
  SPINNAKER_VERSION: 1.26.6
  #REGISTRY_URL: "gcr.io/spinnaker-marketplace/"
  REGISTRY_URL: "us-docker.pkg.dev/spinnaker-community/docker/"
  NEW_REGISTRY_URL: "registry.cn-beijing.aliyuncs.com/spinnaker-fss/"
  NEW_REGISTRY_URL2: "docker.io/spinnakercd/"
  TAG_FILE: "tagfile.txt"
  BOM_DIR: ".boms"
  REDIS: "redis-cluster:v2"
  DISTROLESS: "distroless:nonroot"
  
  

on:
  push:
    paths:
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      
    ##
#     - name: 01-安装Halyard部署工具
#       run: |
#         chmod +x ./InstallHalyard.sh
#         ls 
#         sleep 2
#         sudo bash -x InstallHalyard.sh --user runner -y
#         sleep 5
#         hal -v    
#     ## 
   # - name: 01-使用Halyard获取bom版本文件
   #   run: |
   #     docker pull registry.cn-beijing.aliyuncs.com/spinnaker-cd/halyard:1.32.0
   #     docker run -itd -p 8084:8084 -p 9000:9000 --name halyard  registry.cn-beijing.aliyuncs.com/spinnaker-cd/halyard:1.32.0
   #     sleep 5
   #     docker ps | grep halyard 
   #     chmod +x getbom.sh
   #     docker cp getbom.sh halyard:/opt/getbom.sh
   #     docker exec -u root halyard chmod +x /opt/getbom.sh
   #     docker exec -u root halyard sh /opt/getbom.sh ${SPINNAKER_VERSION}
   #     docker cp halyard:/opt/${SPINNAKER_VERSION}.yml ./${SPINNAKER_VERSION}.yml
   #     mkdir -p .boms
        
    ## 解析版本文件生成镜像标签
    ## 上传到阿里云镜像仓库
    ## docker https://github.com/Azure/docker-login
    #- name: 02-1-获取gcr.io镜像
    #  run: |
    #    python3 tools/fileprocess.py ${SPINNAKER_VERSION}.yml  ${TAG_FILE} ${BOM_DIR} 
    #    ls ${BOM_DIR}
      
    #    echo  -e "\033[32m  ---> Tag File ---> \033[0m"
    #    cat ${TAG_FILE}
    #    docker login -u ${{ secrets.DOCKER_USER}} -p ${{ secrets.DOCKER_PASSWD}} ${NEW_REGISTRY_URL}
    #    for tag in $(cat ${TAG_FILE})
    #    do 
    #       echo  -e "\033[32m  ---> pull ---> ${REGISTRY_URL}${tag} \033[0m"
    #       docker pull ${REGISTRY_URL}${tag}
    #    done
    
#   #  - name: 02-2-同步镜像到dockerHUB
#   #    run: |
#   #      docker login -u ${{ secrets.HUBDOCKER_USER}} -p ${{ secrets.HUBDOCKER_PASSWD}} docker.io
#   #      for tag in $(cat ${TAG_FILE})
#   #      do 
#   #         echo  -e "\033[32m  ---> push ---> ${NEW_REGISTRY_URL2}${tag} \033[0m"
#   #         docker tag ${REGISTRY_URL}${tag} ${NEW_REGISTRY_URL2}${tag}
#   #         docker push ${NEW_REGISTRY_URL2}${tag}
#   #      done
           
    - name: 02-3-同步镜像到阿里云镜像仓库
      run: |
        docker login -u ${{ secrets.DOCKER_USER}} -p ${{ secrets.DOCKER_PASSWD}} ${NEW_REGISTRY_URL}
        docker pull gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/controller:v0.40.2
        docker tag gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/controller:v0.40.2 registry.cn-beijing.aliyuncs.com/k8s-learning/controller:v0.40.2
        docker push registry.cn-beijing.aliyuncs.com/k8s-learning/controller:v0.40.2
        
        docker pull gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/webhook:v0.40.2@sha256:6b8aadbdcede63969ecb719e910b55b7681d87110fc0bf92ca4ee943042f620b
        docker tag gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/webhook:v0.40.2 registry.cn-beijing.aliyuncs.com/k8s-learning/webhook:v0.40.2
        docker push registry.cn-beijing.aliyuncs.com/k8s-learning/webhook:v0.40.2
        
        docker pull gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/kubeconfigwriter:v0.40.2@sha256:0129ea222522c861c0023d5fe4a078fa86fec11aa48faab71128b079434eb2d0
        docker tag gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/kubeconfigwriter:v0.40.2 registry.cn-beijing.aliyuncs.com/k8s-learning/kubeconfigwriter:v0.40.2
        docker push registry.cn-beijing.aliyuncs.com/k8s-learning/kubeconfigwriter:v0.40.2
        
        docker pull gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.40.2@sha256:28ff94e63e4058afc3f15b4c11c08cf3b54fa91faa646a4bbac90380cd7158df
        docker tag gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.40.2 registry.cn-beijing.aliyuncs.com/k8s-learning/git-init:v0.40.2
        docker push registry.cn-beijing.aliyuncs.com/k8s-learning/git-init:v0.40.2
        
        docker pull gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/entrypoint:v0.40.2@sha256:9dfeaaa371733189ddb97d8f1a07895356cf34e1c3c4dc5d1eb67c2caaf7f1d2
        docker tag gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/entrypoint:v0.40.2 registry.cn-beijing.aliyuncs.com/k8s-learning/entrypoint:v0.40.2
        docker push registry.cn-beijing.aliyuncs.com/k8s-learning/entrypoint:v0.40.2
        
        docker pull gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/nop:v0.40.2@sha256:9d12412d03a203d37f82040e0bb81c0a1d62a48b34dadabb587e007049306848
        docker tag gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/nop:v0.40.2 registry.cn-beijing.aliyuncs.com/k8s-learning/nop:v0.40.2
        docker push registry.cn-beijing.aliyuncs.com/k8s-learning/nop:v0.40.2
        
        docker pull gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/imagedigestexporter:v0.40.2@sha256:00f18439a37474910d29326afdada8c18af2fbb656c6ca16b7d1345bec94c7b1
        docker tag gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/imagedigestexporter:v0.40.2 registry.cn-beijing.aliyuncs.com/k8s-learning/imagedigestexporter:v0.40.2
        docker push registry.cn-beijing.aliyuncs.com/k8s-learning/imagedigestexporter:v0.40.2
        
        docker pull gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/pullrequest-init:v0.40.2@sha256:e72aa3aff06960f007b9b59abb70fd14644f40a085e4a81bbdb058a95e272544
        docker tag gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/pullrequest-init:v0.40.2 registry.cn-beijing.aliyuncs.com/k8s-learning/pullrequest-init:v0.40.2
        docker push registry.cn-beijing.aliyuncs.com/k8s-learning/pullrequest-init:v0.40.2
        
        docker pull gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/workingdirinit:v0.40.2@sha256:677ec1dd01ea891e9bb72d5dee252f6e9c13b7914b9c57f6e9ade2508828cacf
        docker tag gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/workingdirinit:v0.40.2 registry.cn-beijing.aliyuncs.com/k8s-learning/workingdirinit:v0.40.2
        docker push registry.cn-beijing.aliyuncs.com/k8s-learning/workingdirinit:v0.40.2
        
        docker pull gcr.io/google.com/cloudsdktool/cloud-sdk@sha256:27b2c22bf259d9bc1a291e99c63791ba0c27a04d2db0a43241ba0f1f20f4067f
        docker tag gcr.io/google.com/cloudsdktool/cloud-sdk@sha256:27b2c22bf259d9bc1a291e99c63791ba0c27a04d2db0a43241ba0f1f20f4067f registry.cn-beijing.aliyuncs.com/k8s-learning/cloud-sdk
        docker push registry.cn-beijing.aliyuncs.com/k8s-learning/cloud-sdk
        
        docker pull gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/controller:v0.21.0@sha256:c260835027b2d5bfccef8221eed5fb4571a2a4cb843c5bdea006163ee1f617bf
        docker tag gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/controller:v0.21.0 registry.cn-beijing.aliyuncs.com/k8s-learning/controller:v0.21.0
        docker push registry.cn-beijing.aliyuncs.com/k8s-learning/controller:v0.21.0
        
        docker pull gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/webhook:v0.21.0@sha256:bdaef43faede7bc05ded54387f2dee0a3a032710fe876cc17034e75b9faf758d
        docker tag gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/webhook:v0.21.0 registry.cn-beijing.aliyuncs.com/k8s-learning/webhook:v0.21.0
        docker push registry.cn-beijing.aliyuncs.com/k8s-learning/webhook:v0.21.0
        
        docker pull gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/interceptors:v0.21.0@sha256:6ec2a6df146507411dfc7b853efd97e43fa5dcbe7e8d9aeb810b704dde3069a1
        docker tag gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/interceptors:v0.21.0 registry.cn-beijing.aliyuncs.com/k8s-learning/interceptors:v0.21.0
        docker push registry.cn-beijing.aliyuncs.com/k8s-learning/interceptors:v0.21.0
        
        docker pull gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/eventlistenersink:v0.21.0@sha256:10605e3af3cf534e10734ea684c94520299c26b29b9dfb67669f7b01a70147dd
        docker tag gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/eventlistenersink:v0.21.0 registry.cn-beijing.aliyuncs.com/k8s-learning/eventlistenersink:v0.21.0
        docker push registry.cn-beijing.aliyuncs.com/k8s-learning/eventlistenersink:v0.21.0
        
        docker pull gcr.io/tekton-releases/github.com/tektoncd/results/cmd/api:v0.3.0@sha256:ed956232dc782cb9bb16f7bf15459fd56db52ce0952b5e2be70ae5314d0ad8de
        docker tag gcr.io/tekton-releases/github.com/tektoncd/results/cmd/api:v0.3.0 registry.cn-beijing.aliyuncs.com/k8s-learning/api:v0.3.0
        docker push registry.cn-beijing.aliyuncs.com/k8s-learning/api:v0.3.0
        
        docker pull gcr.io/tekton-releases/github.com/tektoncd/results/cmd/watcher:v0.3.0@sha256:00b6df37bcee791a96691675a0f83db8ff04bfcf07993e07c61847766f015b44
        docker tag gcr.io/tekton-releases/github.com/tektoncd/results/cmd/watcher:v0.3.0 registry.cn-beijing.aliyuncs.com/k8s-learning/watcher:v0.3.0
        docker push registry.cn-beijing.aliyuncs.com/k8s-learning/watcher:v0.3.0
    
      
      #  docker pull gcr.io/kubernetes-spinnaker/redis-cluster:v2
      #  docker tag gcr.io/kubernetes-spinnaker/redis-cluster:v2 ${NEW_REGISTRY_URL}${REDIS}
      #  docker push ${NEW_REGISTRY_URL}${REDIS}
      #  for tag in $(cat ${TAG_FILE})
     #   do 
     #      echo  -e "\033[32m  ---> push ---> ${NEW_REGISTRY_URL}${tag} \033[0m"
      #     docker tag ${REGISTRY_URL}${tag} ${NEW_REGISTRY_URL}${tag}
      #     docker push ${NEW_REGISTRY_URL}${tag}
     #   done
        
           
    ## 收集镜像tag文件和下载镜像的脚本
   # - name: 03- 收集镜像tag文件和下载镜像的脚本
   #   run : |
   #     mkdir -p artifacts/${SPINNAKER_VERSION}
   #     mv ${TAG_FILE} artifacts/${SPINNAKER_VERSION}/
   #     mv tools/GetImages.sh artifacts/${SPINNAKER_VERSION}/
   #     ## install scripts files 
   #     sed -i "s/SPIN_VERSION/${SPINNAKER_VERSION}/g" tools/install.sh
   #     sed -i "s/SPIN_VERSION/${SPINNAKER_VERSION}/g" tools/halyard.sh
   #     mv tools/halyard.sh artifacts/${SPINNAKER_VERSION}/
   #     mv tools/halyard.yaml artifacts/${SPINNAKER_VERSION}/
   #     mv tools/install.sh artifacts/${SPINNAKER_VERSION}/
   #     mv tools/ingress.yaml artifacts/${SPINNAKER_VERSION}/
        ##
   #     mv ${BOM_DIR} artifacts/${SPINNAKER_VERSION}/
   #     mkdir -p artifacts/${SPINNAKER_VERSION}/${BOM_DIR}/bom

        ## 修改dockerregistry
   #     sed -i "s/us-docker.pkg.dev\/spinnaker-community\/docker/gcr.io\/spinnaker-marketplace/g" ${SPINNAKER_VERSION}.yml
   #     mv ${SPINNAKER_VERSION}.yml artifacts/${SPINNAKER_VERSION}/${BOM_DIR}/bom/
        
    ## artifact https://github.com/actions/upload-artifact
    #- uses: actions/upload-artifact@v2
    #  with: 
    #    name: ${{ env.SPINNAKER_VERSION }}-Install-Scripts
    #    path: artifacts/*
